name: CI Pipeline
on:
  push:
    branches: [main] # pushes to main
  pull_request:
    branches: [main] #  # PRs to main
jobs:

  # Lint stage

  lint-frontend:
    name: Lint frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      
      - name: Lint
        run: make lint-frontend
      
  lint-backend:
    name: Lint backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: make install-backend

      - name: Lint
        run: make lint-backend

  lint-go:
    name: Lint WebRTC in Go
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      # Note: Using golangci-lint-action instead of 'make lint-go' for better caching and PR annotations
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: webrtc-signaling
